// DO NOT EDIT THIS FILE. GENERATED BY xgen.

package acc

import (
	"embedded/mmio"
	"unsafe"
)

type Periph struct {
	ITCMCR RITCMCR
	DTCMCR RDTCMCR
	AHBPCR RAHBPCR
	CACR   RCACR
	AHBSCR RAHBSCR
	_      uint32
	ABFSR  RABFSR
}

func (p *Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

func ACC() *Periph { return (*Periph)(unsafe.Pointer(uintptr(0xE000EF90))) }

type ITCMCR uint32

type RITCMCR struct{ mmio.U32 }

func (r *RITCMCR) Bits(mask ITCMCR) ITCMCR  { return ITCMCR(r.U32.Bits(uint32(mask))) }
func (r *RITCMCR) StoreBits(mask, b ITCMCR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RITCMCR) SetBits(mask ITCMCR)      { r.U32.SetBits(uint32(mask)) }
func (r *RITCMCR) ClearBits(mask ITCMCR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RITCMCR) Load() ITCMCR             { return ITCMCR(r.U32.Load()) }
func (r *RITCMCR) Store(b ITCMCR)           { r.U32.Store(uint32(b)) }

type RMITCMCR struct{ mmio.UM32 }

func (rm RMITCMCR) Load() ITCMCR   { return ITCMCR(rm.UM32.Load()) }
func (rm RMITCMCR) Store(b ITCMCR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) ITCMEN() RMITCMCR {
	return RMITCMCR{mmio.UM32{&p.ITCMCR.U32, uint32(ITCMEN)}}
}

func (p *Periph) ITCMRMW() RMITCMCR {
	return RMITCMCR{mmio.UM32{&p.ITCMCR.U32, uint32(ITCMRMW)}}
}

func (p *Periph) ITCMRETEN() RMITCMCR {
	return RMITCMCR{mmio.UM32{&p.ITCMCR.U32, uint32(ITCMRETEN)}}
}

func (p *Periph) ITCMSZ() RMITCMCR {
	return RMITCMCR{mmio.UM32{&p.ITCMCR.U32, uint32(ITCMSZ)}}
}

type DTCMCR uint32

type RDTCMCR struct{ mmio.U32 }

func (r *RDTCMCR) Bits(mask DTCMCR) DTCMCR  { return DTCMCR(r.U32.Bits(uint32(mask))) }
func (r *RDTCMCR) StoreBits(mask, b DTCMCR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RDTCMCR) SetBits(mask DTCMCR)      { r.U32.SetBits(uint32(mask)) }
func (r *RDTCMCR) ClearBits(mask DTCMCR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RDTCMCR) Load() DTCMCR             { return DTCMCR(r.U32.Load()) }
func (r *RDTCMCR) Store(b DTCMCR)           { r.U32.Store(uint32(b)) }

type RMDTCMCR struct{ mmio.UM32 }

func (rm RMDTCMCR) Load() DTCMCR   { return DTCMCR(rm.UM32.Load()) }
func (rm RMDTCMCR) Store(b DTCMCR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) DTCMEN() RMDTCMCR {
	return RMDTCMCR{mmio.UM32{&p.DTCMCR.U32, uint32(DTCMEN)}}
}

func (p *Periph) DTCMRMW() RMDTCMCR {
	return RMDTCMCR{mmio.UM32{&p.DTCMCR.U32, uint32(DTCMRMW)}}
}

func (p *Periph) DTCMRETEN() RMDTCMCR {
	return RMDTCMCR{mmio.UM32{&p.DTCMCR.U32, uint32(DTCMRETEN)}}
}

func (p *Periph) DTCMSZ() RMDTCMCR {
	return RMDTCMCR{mmio.UM32{&p.DTCMCR.U32, uint32(DTCMSZ)}}
}

type AHBPCR uint32

type RAHBPCR struct{ mmio.U32 }

func (r *RAHBPCR) Bits(mask AHBPCR) AHBPCR  { return AHBPCR(r.U32.Bits(uint32(mask))) }
func (r *RAHBPCR) StoreBits(mask, b AHBPCR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RAHBPCR) SetBits(mask AHBPCR)      { r.U32.SetBits(uint32(mask)) }
func (r *RAHBPCR) ClearBits(mask AHBPCR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RAHBPCR) Load() AHBPCR             { return AHBPCR(r.U32.Load()) }
func (r *RAHBPCR) Store(b AHBPCR)           { r.U32.Store(uint32(b)) }

type RMAHBPCR struct{ mmio.UM32 }

func (rm RMAHBPCR) Load() AHBPCR   { return AHBPCR(rm.UM32.Load()) }
func (rm RMAHBPCR) Store(b AHBPCR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) AHBPEN() RMAHBPCR {
	return RMAHBPCR{mmio.UM32{&p.AHBPCR.U32, uint32(AHBPEN)}}
}

func (p *Periph) AHBPSZ() RMAHBPCR {
	return RMAHBPCR{mmio.UM32{&p.AHBPCR.U32, uint32(AHBPSZ)}}
}

type CACR uint32

type RCACR struct{ mmio.U32 }

func (r *RCACR) Bits(mask CACR) CACR    { return CACR(r.U32.Bits(uint32(mask))) }
func (r *RCACR) StoreBits(mask, b CACR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RCACR) SetBits(mask CACR)      { r.U32.SetBits(uint32(mask)) }
func (r *RCACR) ClearBits(mask CACR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RCACR) Load() CACR             { return CACR(r.U32.Load()) }
func (r *RCACR) Store(b CACR)           { r.U32.Store(uint32(b)) }

type RMCACR struct{ mmio.UM32 }

func (rm RMCACR) Load() CACR   { return CACR(rm.UM32.Load()) }
func (rm RMCACR) Store(b CACR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) SIWT() RMCACR {
	return RMCACR{mmio.UM32{&p.CACR.U32, uint32(SIWT)}}
}

func (p *Periph) ECCDIS() RMCACR {
	return RMCACR{mmio.UM32{&p.CACR.U32, uint32(ECCDIS)}}
}

func (p *Periph) FORCEWT() RMCACR {
	return RMCACR{mmio.UM32{&p.CACR.U32, uint32(FORCEWT)}}
}

type AHBSCR uint32

type RAHBSCR struct{ mmio.U32 }

func (r *RAHBSCR) Bits(mask AHBSCR) AHBSCR  { return AHBSCR(r.U32.Bits(uint32(mask))) }
func (r *RAHBSCR) StoreBits(mask, b AHBSCR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RAHBSCR) SetBits(mask AHBSCR)      { r.U32.SetBits(uint32(mask)) }
func (r *RAHBSCR) ClearBits(mask AHBSCR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RAHBSCR) Load() AHBSCR             { return AHBSCR(r.U32.Load()) }
func (r *RAHBSCR) Store(b AHBSCR)           { r.U32.Store(uint32(b)) }

type RMAHBSCR struct{ mmio.UM32 }

func (rm RMAHBSCR) Load() AHBSCR   { return AHBSCR(rm.UM32.Load()) }
func (rm RMAHBSCR) Store(b AHBSCR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) CTL() RMAHBSCR {
	return RMAHBSCR{mmio.UM32{&p.AHBSCR.U32, uint32(CTL)}}
}

func (p *Periph) TPRI() RMAHBSCR {
	return RMAHBSCR{mmio.UM32{&p.AHBSCR.U32, uint32(TPRI)}}
}

func (p *Periph) INITCOUNT() RMAHBSCR {
	return RMAHBSCR{mmio.UM32{&p.AHBSCR.U32, uint32(INITCOUNT)}}
}

type ABFSR uint32

type RABFSR struct{ mmio.U32 }

func (r *RABFSR) Bits(mask ABFSR) ABFSR   { return ABFSR(r.U32.Bits(uint32(mask))) }
func (r *RABFSR) StoreBits(mask, b ABFSR) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RABFSR) SetBits(mask ABFSR)      { r.U32.SetBits(uint32(mask)) }
func (r *RABFSR) ClearBits(mask ABFSR)    { r.U32.ClearBits(uint32(mask)) }
func (r *RABFSR) Load() ABFSR             { return ABFSR(r.U32.Load()) }
func (r *RABFSR) Store(b ABFSR)           { r.U32.Store(uint32(b)) }

type RMABFSR struct{ mmio.UM32 }

func (rm RMABFSR) Load() ABFSR   { return ABFSR(rm.UM32.Load()) }
func (rm RMABFSR) Store(b ABFSR) { rm.UM32.Store(uint32(b)) }

func (p *Periph) ITCM() RMABFSR {
	return RMABFSR{mmio.UM32{&p.ABFSR.U32, uint32(ITCM)}}
}

func (p *Periph) DTCM() RMABFSR {
	return RMABFSR{mmio.UM32{&p.ABFSR.U32, uint32(DTCM)}}
}

func (p *Periph) AHBP() RMABFSR {
	return RMABFSR{mmio.UM32{&p.ABFSR.U32, uint32(AHBP)}}
}

func (p *Periph) AXIM() RMABFSR {
	return RMABFSR{mmio.UM32{&p.ABFSR.U32, uint32(AXIM)}}
}

func (p *Periph) EPPB() RMABFSR {
	return RMABFSR{mmio.UM32{&p.ABFSR.U32, uint32(EPPB)}}
}

func (p *Periph) AXIMTYPE() RMABFSR {
	return RMABFSR{mmio.UM32{&p.ABFSR.U32, uint32(AXIMTYPE)}}
}
